name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-ecr-repo
  ECS_SERVICE: my-ecs-service
  ECS_CLUSTER: my-ecs-cluster
  ECS_TASK_DEFINITION: task-definition.json
  CONTAINER_NAME: my-container
  
  steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        

      # Step 2: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.AWS_REGION }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-project:latest .
          docker tag my-project:latest ${{ secrets.ECR_REPOSITORY_URI }}:latest

      # Step 4: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

      # Step 5: Update ECS service with the new image
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json  # Your task definition file
          service: my-ecs-service              # Your ECS service name
          cluster: my-ecs-cluster              # Your ECS cluster name
          wait-for-service-stability: true     # Wait until service is stable
          region: ${{ secrets.AWS_REGION }}
